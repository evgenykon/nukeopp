  /*#container {
    width: 100%;
    height: 700px;
    perspective: 800; /* For compatibility with iPhone 3.0, we leave off the units here */
    //perspective-origin: 50% 225px;
 // }*/
  #person-cube {
    width: 100%;
    height: 100%;
    transition: transform 2s;
    transform-style: preserve-3d;
    top: 0;
    position: fixed;
    left: 0;
  }
  
  .shape {
    position: relative;
    top: calc(50% - 20%);
    margin: 0 auto;
    height: 200px;
    width: 200px;
    transform-style: preserve-3d;
  }
  
  .plane {
    position: absolute;
    height: 100%;
    width: 100%;
    border: 1px solid white;
    border-radius: 12px;
    box-sizing: border-box;
    text-align: center;
    font-family: Times, serif;
    font-size: 124pt;
    color: black;
    background-color: rgba(255, 255, 255, 0.6);
    transition: transform 2s, opacity 2s;
    backface-visibility: hidden;
  }

  .shape.backfaces .plane {
    backface-visibility: visible;
  }

  .shape {
    animation: spin 32s infinite linear;
  }

  @keyframes spin {
    from { transform: rotateY(0); }
    to   { transform: rotateY(-360deg); }
  }
  /* ---------- ring styles ------------- */

  $hight: 100%;
  $speed: 32s;
  $itemsCount: 12;
  $delay: calc($speed / $itemsCount);

  .ring {
    transform: translateZ(380px);
    $startDeg: 0deg;
    $angle: calc(360deg / $itemsCount); 
    @for $i from 1 through $itemsCount {
      .plane:nth-child(#{$i}) {
        $startDeg: (30deg * $i);
        transform: rotateY($startDeg) translateZ(380px);
        animation: ringHeight $speed ease-in-out infinite;
        animation-delay: $delay * ($i - 1);
        @if ($i <= $itemsCount * 0.5) {
          height: 100% + ($i * 2);
        } @else {
          height: ($hight + ($itemsCount * 2)) - ($i * 2);
        }
      }
    }   
  }

  @keyframes ringHeight {
    0% { height: $hight + $itemsCount; top: 0% - calc($itemsCount / 2); }
    50% { height: $hight; top: 0%; }
    100% { height: $hight + $itemsCount; top: 0 - calc($itemsCount / 2); }
   }

  
  /* ---------- cube styles ------------- */
  .cube > .one {
    opacity: 0.5;
    transform: scale3d(1.2, 1.2, 1.2) rotateX(90deg) translateZ(100px);
  }

  .cube > .two {
    opacity: 0.5;
    transform: scale3d(1.2, 1.2, 1.2) translateZ(100px);
  }

  .cube > .three {
    opacity: 0.5;
    transform: scale3d(1.2, 1.2, 1.2) rotateY(90deg) translateZ(100px);
  }

  .cube > .four {
    opacity: 0.5;
    transform: scale3d(1.2, 1.2, 1.2) rotateY(180deg) translateZ(100px);
  }

  .cube > .five {
    opacity: 0.5;
    transform: scale3d(1.2, 1.2, 1.2) rotateY(-90deg) translateZ(100px);
  }

  .cube > .six {
    opacity: 0.5;
    transform: scale3d(1.2, 1.2, 1.2) rotateX(-90deg) translateZ(100px) rotate(180deg);
  }


  .cube > .seven {
    transform: scale3d(0.8, 0.8, 0.8) rotateX(90deg) translateZ(100px) rotate(180deg);
  }

  .cube > .eight {
    transform: scale3d(0.8, 0.8, 0.8) translateZ(100px);
  }

  .cube > .nine {
    transform: scale3d(0.8, 0.8, 0.8) rotateY(90deg) translateZ(100px);
  }

  .cube > .ten {
    transform: scale3d(0.8, 0.8, 0.8) rotateY(180deg) translateZ(100px);
  }

  .cube > .eleven {
    transform: scale3d(0.8, 0.8, 0.8) rotateY(-90deg) translateZ(100px);
  }

  .cube > .twelve {
    transform: scale3d(0.8, 0.8, 0.8) rotateX(-90deg) translateZ(100px);
  }
